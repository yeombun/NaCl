name: IoT Sensor Monitoring

on:
  repository_dispatch:
    types: [sensor-data, clear-alerts]
  schedule:
    - cron: '0 15 * * *'
  workflow_dispatch:

jobs:
  # 데이터 처리 작업
  process-sensor-data:
    if: github.event_name == 'repository_dispatch' && github.event.action == 'sensor-data' || github.event_name == 'schedule'
    
    # --- 바로 이 부분이 필수입니다 ---
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      issues: write
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Dependencies
        run: pip install requests
      - name: Process Data and Update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SENSOR_DATA: ${{ github.event.client_payload.data }}
        run: python ./scripts/process_data.py
      - name: Commit data files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git diff-index --quiet HEAD || git commit -m "Update sensor data backup" && git push

  # 알림 초기화 작업
  clear-alerts:
    if: (github.event_name == 'repository_dispatch' && github.event.action == 'clear-alerts') || github.event_name == 'workflow_dispatch'
    
    # --- 이 작업에도 똑같이 필수입니다 ---
    runs-on: ubuntu-latest
    
    permissions:
      issues: write
    steps:
      - name: Close all alert issues
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue list --label "alert" --state "open" --json number --jq '.[].number' | xargs -I {} gh issue close {}
          echo "All alert issues have been closed."
